{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeResult","val","state","numResult","getData","person","url","this","fetch","response","json","data","setState","results","console","log","className","type","onClick","map","index","login","username","email","gender","uuid","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAsEeA,G,wDAlEf,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,aAAe,SAACC,GAEd,EAAKC,MAAMC,UAAYF,EACvB,EAAKG,WAtBL,EAAKF,MAAQ,CACXG,OAAQ,KACRF,UAAW,GAJI,E,iLASXG,E,6CAA4CC,KAAKL,MAAMC,W,SACtCK,MAAMF,G,cAAvBG,E,gBACaA,EAASC,O,OAAtBC,E,OACNJ,KAAKK,SAAS,CAACP,OAAQM,EAAKE,UAC5BC,QAAQC,IAAIR,KAAKL,MAAMG,Q,gJAIvBE,KAAKH,Y,+BASK,IAAD,OACP,OACA,qBAAKY,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,sBAAKA,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKlB,aAAa,IAAvD,uBACA,wBAAQiB,KAAK,SAASC,QAAS,kBAAM,EAAKlB,aAAa,KAAvD,wBACA,wBAAQiB,KAAK,SAASC,QAAS,kBAAM,EAAKlB,aAAa,KAAvD,2BAEEO,KAAKL,MAAMG,OAEX,gCACA,kCACA,+BACE,wCACA,0CACA,uCACA,2CAEDE,KAAKL,MAAMG,OAAOc,KAAK,SAACd,EAAQe,GAAT,OAEpB,+BACE,6BAAKA,EAAQ,IACb,6BAAKf,EAAOgB,MAAMC,WAClB,6BAAKjB,EAAOkB,QACZ,6BAAKlB,EAAOmB,WAJLnB,EAAOgB,MAAMI,cAZL,qD,GApCbC,cCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2711715.chunk.js","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\n\nclass App extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    person: null,\n    numResult: 5\n  };\n}\n\nasync getData() {\n  const url = `https://randomuser.me/api/?results=${this.state.numResult}`\n  const response = await fetch(url);\n  const data = await response.json();\n  this.setState({person: data.results});\n  console.log(this.state.person);\n}\n\ncomponentDidMount() {\n  this.getData();\n}\n\n\nchangeResult = (val) => {\n  // eslint-disable-next-line\n  this.state.numResult = val;\n  this.getData();\n}\n  render() {\n    return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"btn-group\">\n        <button type='button' onClick={() => this.changeResult(5)}>5 results</button>\n        <button type='button' onClick={() => this.changeResult(10)}>10 results</button>\n        <button type='button' onClick={() => this.changeResult(20)}>20 results</button>\n      </div>\n        {!this.state.person ? (<p>loading....</p>) : \n        (\n          <table>\n          <tbody>\n          <tr>\n            <th>Number</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Gender</th>\n          </tr>\n          {this.state.person.map( (person, index) => \n              (\n              <tr key={person.login.uuid}>\n                <td>{index + 1}</td>\n                <td>{person.login.username}</td>\n                <td>{person.email}</td>\n                <td>{person.gender}</td>\n              </tr>\n              )\n            )\n          }\n          </tbody>\n        </table>\n        )\n      }\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}